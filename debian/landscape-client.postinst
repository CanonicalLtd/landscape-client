#!/bin/sh
set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

. /usr/share/debconf/confmodule
trap "db_stop || true" EXIT HUP INT QUIT TERM

PACKAGE=landscape-client

# Use the default installed Python.  Running just "python" might run
# something from /usr/local/bin, which doesn't necessarily support
# running the landscape client.
PYTHON=/usr/bin/python

case "$1" in
    configure)

        # Tell dbus to reload its configuration since we've installed a conf
        # to its system.d. We must do this before invoking landscape-config.
        invoke-rc.d dbus reload || true

        CONFIG_FILE=/etc/landscape/client.conf
        if [ ! -f $CONFIG_FILE ]; then
            # Create new configuration, with private mode
            TEMPFILE=$(mktemp -p /etc/landscape)
            cat > $TEMPFILE <<END
[client]
log_level = info
url = https://landscape.canonical.com/message-system
ping_url = http://landscape.canonical.com/ping
package_hash_id_url = https://landscape.canonical.com/hash-id-databases
data_path = /var/lib/landscape/client
END
            chown landscape $TEMPFILE
            mv $TEMPFILE $CONFIG_FILE

            db_get $PACKAGE/computer_title
            COMPUTER_TITLE="${RET}"
            db_get $PACKAGE/account_name
            ACCOUNT_NAME="${RET}"
            db_get $PACKAGE/registration_password
            REGISTRATION_PASSWORD="${RET}"

            # If we got the needed information, actually do the registration.
            if [ -n "$ACCOUNT_NAME" -a -n "$COMPUTER_TITLE" ]; then
                landscape-config --silent --ok-no-register -a "$ACCOUNT_NAME" \
                                          -p "$REGISTRATION_PASSWORD" \
                                          -t "$COMPUTER_TITLE"
            fi
        else
            # Fix non-private permissions
            chmod 0600 $CONFIG_FILE
        fi

        # old monolithic clients have a single persist data file and a single
        # package hash db.  This data should be migrated to the new format
        # where each service has a persist and the package data is kept in a
        # sqlite database.

        DATA_BPICKLE=$DATA_DIR/client/data.bpickle
        BROKER_BPICKLE=$DATA_DIR/client/broker.bpickle

        if [ -f $DATA_BPICKLE -a ! -f $BROKER_BPICKLE ]; then
            $PYTHON -c "from landscape.upgraders import legacy; legacy.migrate_data_file('$DATA_DIR/client')"
            mv $DATA_BPICKLE $DATA_BPICKLE.migrated
            echo "Old monolithic client data file migrated to new format."
        fi

    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
