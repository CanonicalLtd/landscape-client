#!/bin/sh
set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

. /usr/share/debconf/confmodule
trap "db_stop || true" EXIT HUP INT QUIT TERM

PACKAGE=landscape-client

# Use the default installed Python.  Running just "python" might run
# something from /usr/local/bin, which doesn't necessarily support
# running the landscape client.
PYTHON=/usr/bin/python

case "$1" in
    configure)

        CONFIG_FILE=/etc/landscape/client.conf
        # Get configuration values from debconf
        db_get $PACKAGE/computer_title
        COMPUTER_TITLE="${RET}"
        db_get $PACKAGE/account_name
        ACCOUNT_NAME="${RET}"
        db_get $PACKAGE/registration_password
        REGISTRATION_PASSWORD="${RET}"
        db_get $PACKAGE/url
        URL="${RET}"
        db_get $PACKAGE/exchange_interval
        EXCHANGE_INTERVAL="${RET}"
        db_get $PACKAGE/urgent_exchange_interval
        URGENT_EXCHANGE_INTERVAL="${RET}"
        db_get $PACKAGE/ping_url
        PING_URL="${RET}"
        db_get $PACKAGE/ping_interval
        PING_INTERVAL="${RET}"
        db_get $PACKAGE/http_proxy
        HTTP_PROXY="${RET}"
        db_get $PACKAGE/https_proxy
        HTTPS_PROXY="${RET}"
        db_get $PACKAGE/otp
        OTP="${RET}"
        db_get $PACKAGE/tags
        TAGS="${RET}"
        db_get $PACKAGE/ask_register_system
        ASK_REGISTER_SYSTEM="${RET}"
        db_get $PACKAGE/server_autodiscover
        SERVER_AUTODISCOVER="${RET}"
        db_get $PACKAGE/autodiscover_srv_query_string
        AUTODISCOVER_SRV_QUERY_STRING="${RET}"
        db_get $PACKAGE/autodiscover_a_query_string
        AUTODISCOVER_A_QUERY_STRING="${RET}"


        if [ ! -f $CONFIG_FILE ]; then
            touch $CONFIG_FILE
        fi
        chown landscape $CONFIG_FILE
        # Fix non-private permissions
        chmod 0600 $CONFIG_FILE

        # If requested, perform registration
        if [ $ASK_REGISTER_SYSTEM = "true" ]; then
            MORE_OPTIONS="--ok-no-register"
        else
            MORE_OPTIONS="--no-start"
        fi

        # Configure landscape
        landscape-config --silent $MORE_OPTIONS \
            --computer-title "$COMPUTER_TITLE" \
            --account-name "$ACCOUNT_NAME" \
            --registration-password "$REGISTRATION_PASSWORD" \
            --url "$URL" \
            --exchange-interval "$EXCHANGE_INTERVAL" \
            --urgent-exchange-interval "$URGENT_EXCHANGE_INTERVAL" \
            --ping-url "$PING_URL" \
            --ping-interval "$PING_INTERVAL" \
            --http-proxy "$HTTP_PROXY" \
            --https-proxy "$HTTPS_PROXY" \
            --otp "$OTP" \
            --tags "$TAGS" \
            --server-autodiscover "$SERVER_AUTODISCOVER" \
            --autodiscover-srv-query-string "$AUTODISCOVER_SRV_QUERY_STRING" \
            --autodiscover-a-query-string "$AUTODISCOVER_A_QUERY_STRING"

        # old monolithic clients have a single persist data file and a single
        # package hash db.  This data should be migrated to the new format
        # where each service has a persist and the package data is kept in a
        # sqlite database.

        DATA_BPICKLE=$DATA_DIR/client/data.bpickle
        BROKER_BPICKLE=$DATA_DIR/client/broker.bpickle

        if [ -f $DATA_BPICKLE -a ! -f $BROKER_BPICKLE ]; then
            $PYTHON -c "from landscape.upgraders import legacy; legacy.migrate_data_file('$DATA_DIR/client')"
            mv $DATA_BPICKLE $DATA_BPICKLE.migrated
            echo "Old monolithic client data file migrated to new format."
        fi

        # Add the setuid flag to smart-update and apt-update, and make them be
        # executable by users in the landscape group (that normally means
        # landscape itself)
        smart_update=/usr/lib/landscape/smart-update
        if ! dpkg-statoverride --list $smart_update >/dev/null 2>&1; then
            dpkg-statoverride --update --add root landscape 4754 $smart_update
        fi
        apt_update=/usr/lib/landscape/apt-update
        if ! dpkg-statoverride --list $apt_update >/dev/null 2>&1; then
            dpkg-statoverride --update --add root landscape 4754 $apt_update
        fi

        # Remove old cron jobs
        old_cron_job=/etc/cron.hourly/landscape-client
        if [ -e $old_cron_job ]; then
            rm $old_cron_job
        fi
        very_old_cron_job=/etc/cron.hourly/smartpm-core
        if [ -e $very_old_cron_job ]; then
            rm $very_old_cron_job
        fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
